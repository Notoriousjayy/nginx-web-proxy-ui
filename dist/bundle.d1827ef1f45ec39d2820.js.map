{"version":3,"file":"bundle.d1827ef1f45ec39d2820.js","mappings":"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","sources":["webpack://nginx-web-proxy/./src/components/Button/Button.tsx","webpack://nginx-web-proxy/./src/components/BorderedPanel/BorderedPanel.tsx","webpack://nginx-web-proxy/./src/components/FormTextInput/FormTextInput.tsx","webpack://nginx-web-proxy/./src/components/FormLabel/FormLabel.tsx","webpack://nginx-web-proxy/./src/components/FormSuccessMessage/FormSuccessMessage.tsx","webpack://nginx-web-proxy/./src/components/FormTitle/FormTitle.tsx","webpack://nginx-web-proxy/./src/pages/Contact/Contact.tsx","webpack://nginx-web-proxy/./src/pages/Contact/ContactStyles.ts","webpack://nginx-web-proxy/./src/components/H2/H2.tsx"],"sourcesContent":["// src/components/Button/Button.tsx\r\nimport React from 'react'\r\n\r\nexport interface ButtonProps {\r\n  /** If provided, renders an <a> tag instead of <button> */\r\n  href?: string\r\n  /** Text label of the button */\r\n  label: string\r\n  /** target attribute for links (e.g. \"_blank\") */\r\n  target?: React.HTMLAttributeAnchorTarget\r\n  /** button style variant; currently only \"primary\" is supported */\r\n  type?: 'primary'\r\n  /** click handler for native button */\r\n  onClick?: React.ButtonHTMLAttributes<HTMLButtonElement>['onClick']\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({\r\n  href,\r\n  label,\r\n  target,\r\n  type = 'primary',\r\n  onClick,\r\n}) => {\r\n  const baseClasses = [\r\n    'inline-block',\r\n    'text-[18px]',\r\n    'font-bold',\r\n    'leading-[1]',\r\n    'px-[24px]',\r\n    'py-[12px]',\r\n    'transition',\r\n  ]\r\n\r\n  // Variant classes\r\n  const variantClasses =\r\n    type === 'primary'\r\n      ? [\r\n          'bg-orange-ff583d',\r\n          'text-neutral-222224',\r\n          'hover:bg-yellow-f0c808',\r\n        ]\r\n      : []\r\n\r\n  const className = [...baseClasses, ...variantClasses].join(' ')\r\n\r\n  if (href) {\r\n    // For links, add rel if opening in new tab\r\n    const rel = target === '_blank' ? 'noopener noreferrer' : undefined\r\n    return (\r\n      <a href={href} target={target} rel={rel} className={className}>\r\n        {label}\r\n      </a>\r\n    )\r\n  }\r\n\r\n  // Otherwise render a button\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className={className}>\r\n      {label}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","// src/components/BorderedPanel/BorderedPanel.tsx\r\nimport React, { JSX, ReactNode } from 'react'\r\n\r\nexport interface BorderedPanelProps {\r\n  /** Which HTML tag to render (defaults to `div`) */\r\n  as?: keyof JSX.IntrinsicElements\r\n  /** Tailwind-style border color class, e.g. \"blue-00bff3\" */\r\n  borderColor: string\r\n  /** Tailwind-style background color class, e.g. \"olive-9aa665\" */\r\n  backgroundColor: string\r\n  /** Child nodes to render inside the panel */\r\n  children?: ReactNode\r\n}\r\n\r\nexport const BorderedPanel: React.FC<BorderedPanelProps> = ({\r\n  as = 'div',\r\n  borderColor,\r\n  backgroundColor,\r\n  children,\r\n}) => {\r\n  const Tag = as as any\r\n\r\n  // Weâ€™re using utility classes to reproduce:\r\n  // border-style: solid; border-width: 8px;\r\n  // width: 100%; max-width: 800px; margin: 0 auto;\r\n  // padding: 32px; at min-width 800px padding-horizontal: 64px\r\n  const className = [\r\n    `border-solid`,\r\n    `border-[8px]`,\r\n    `w-full`,\r\n    `max-w-[800px]`,\r\n    `mx-auto`,\r\n    `p-[32px]`,\r\n    `@mq-800--px-[64px]`,\r\n    `border-${borderColor}`,\r\n    backgroundColor,\r\n  ].join(' ')\r\n\r\n  return <Tag className={className}>{children}</Tag>\r\n}\r\n\r\nexport default BorderedPanel\r\n","// src/components/FormTextInput/FormTextInput.tsx\r\nimport React, { ChangeEvent } from 'react'\r\n\r\nexport interface FormTextInputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  /** The label text */\r\n  label: string\r\n}\r\n\r\nexport const FormTextInput: React.FC<FormTextInputProps> = ({\r\n  label,\r\n  id,\r\n  name,\r\n  type = 'text',\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  required,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const inputId = id ?? name\r\n  return (\r\n    <div className=\"p-4\">\r\n      <label\r\n        htmlFor={inputId}\r\n        className=\"\r\n          text-blue-600 \r\n          block \r\n          pb-2 \r\n          text-sm \r\n          font-medium\r\n        \"\r\n      >\r\n        {label}\r\n      </label>\r\n      <input\r\n        id={inputId}\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange as (e: ChangeEvent<HTMLInputElement>) => void}\r\n        required={required}\r\n        className={`\r\n          w-full\r\n          px-3\r\n          py-2\r\n          border\r\n          border-gray-300\r\n          rounded\r\n          focus:outline-none\r\n          focus:ring-2\r\n          focus:ring-blue-500\r\n          ${className ?? ''}\r\n        `}\r\n        {...rest}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nFormTextInput.displayName = 'FormTextInput'\r\n","import React from 'react'\r\n\r\nexport interface FormLabelProps {\r\n  label: string\r\n  htmlFor: string\r\n  visuallyHidden?: boolean\r\n}\r\n\r\nexport const FormLabel: React.FC<FormLabelProps> = ({\r\n  label,\r\n  htmlFor,\r\n  visuallyHidden = false,\r\n}) => (\r\n  <label\r\n    htmlFor={htmlFor}\r\n    className={`\r\n      color:blue-265f8e \r\n      display:block \r\n      padding-bottom:8px \r\n      font-size:14px \r\n      font-weight:500\r\n      ${visuallyHidden ? 'visually-hidden' : ''}\r\n    `}\r\n  >\r\n    {label}\r\n  </label>\r\n)\r\n","import React from 'react'\r\n\r\nexport const FormSuccessMessage: React.FC = () => (\r\n  <div\r\n    className=\"\r\n      align-items:center \r\n      text-align:center \r\n      margin-horizontal:auto \r\n      @mq-768--display:flex \r\n      @mq-768--text-align:left\r\n    \"\r\n  >\r\n    <div>\r\n      <p\r\n        className=\"\r\n          color:blue-265f8e \r\n          font-size:24px \r\n          font-weight:400 \r\n          margin-bottom:16px \r\n          @mq-768--font-size:40px\r\n        \"\r\n      >\r\n        Your submission has been received.\r\n      </p>\r\n      <p className=\"line-height:1.375 margin-bottom:16px\">\r\n        Our robots are eager to help and will reach out shortly.<br />\r\n        Thanks for your inquiry!\r\n      </p>\r\n    </div>\r\n    <img\r\n      src=\"/images/contact/fred-standing.png\"\r\n      alt=\"\"\r\n      width={162}\r\n      height={279}\r\n      className=\"flex-shrink:0\"\r\n    />\r\n  </div>\r\n)\r\n","import React from 'react'\r\n\r\nexport interface FormTitleProps {\r\n  legend: string\r\n}\r\n\r\nexport const FormTitle: React.FC<FormTitleProps> = ({ legend }) => (\r\n  <div className=\"padding\">\r\n    <legend className=\"visually-hidden\">{legend}</legend>\r\n    <h3\r\n      className=\"font-size:28px font-weight:500 line-height:1.142\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      {legend}\r\n    </h3>\r\n  </div>\r\n)\r\n","// src/pages/Contact/Contact.tsx\r\nimport React, { useState, FormEvent, ChangeEvent } from 'react'\r\nimport { H2 } from '../../components/H2'\r\nimport { Button } from '../../components/Button'\r\nimport { BorderedPanel } from '../../components/BorderedPanel'\r\nimport logoUrl from '../../assets/images/logo.svg?url'\r\nimport fredUrl from '../../assets/images/contact/fred-standing.png'\r\n\r\n// form primitives\r\nimport { FormTextInput } from '../../components/FormTextInput'\r\nimport { FormLabel } from '../../components/FormLabel'\r\nimport { FormSuccessMessage } from '../../components/FormSuccessMessage'\r\nimport { FormTitle } from '../../components/FormTitle'\r\n\r\ninterface FormState {\r\n  firstName: string\r\n  lastName: string\r\n  phone: string\r\n  email: string\r\n  message: string\r\n}\r\n\r\nconst initialForm: FormState = {\r\n  firstName: '',\r\n  lastName: '',\r\n  phone: '',\r\n  email: '',\r\n  message: '',\r\n}\r\n\r\nconst Contact: React.FC = () => {\r\n  const [hasSubmitted, setHasSubmitted] = useState(false)\r\n  const [form, setForm] = useState<FormState>(initialForm)\r\n\r\n  const handleChange = (\r\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = e.target\r\n    setForm(f => ({ ...f, [name]: value }))\r\n  }\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault()\r\n    // â†’ send `form` to your APIâ€¦\r\n    setHasSubmitted(true)\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      {/* Hero */}\r\n      <section className=\"py-24 bg-yellow-f0c808\">\r\n        <div className=\"container mx-auto px-8 flex flex-col md:flex-row items-center justify-between\">\r\n          <div className=\"md:w-1/2 mb-8 md:mb-0\">\r\n            <H2 heading=\"Contact\" />\r\n            <p className=\"text-lg leading-tight\">\r\n              Weâ€™re available 24-7 via our contact form below, or by emailing{' '}\r\n              <a href=\"mailto:info@binaryville.com\" className=\"underline\">\r\n                info@binaryville.com\r\n              </a>\r\n              . Weâ€™re happy to answer any questions you may have.\r\n            </p>\r\n          </div>\r\n          <img\r\n            src={logoUrl}\r\n            alt=\"Binaryville logo\"\r\n            width={423}\r\n            height={219}\r\n            className=\"mx-auto max-w-full\"\r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      {/* Form Section */}\r\n      <section className=\"container mx-auto px-8 py-12\">\r\n        <BorderedPanel as=\"div\" borderColor=\"blue-00bff3\" backgroundColor=\"white\">\r\n          {hasSubmitted ? (\r\n            <FormSuccessMessage />\r\n          ) : (\r\n            <form onSubmit={handleSubmit}>\r\n              {/* Accessible legend + visible title */}\r\n              <fieldset className=\"space-y-6\">\r\n                <FormTitle legend=\"Contact Us\" />\r\n\r\n                <div className=\"flex flex-wrap -mx-2\">\r\n                  <div className=\"w-full md:w-1/2 px-2 mb-4\">\r\n                    <FormTextInput\r\n                      label=\"First name\"\r\n                      name=\"firstName\"\r\n                      value={form.firstName}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full md:w-1/2 px-2 mb-4\">\r\n                    <FormTextInput\r\n                      label=\"Last name\"\r\n                      name=\"lastName\"\r\n                      value={form.lastName}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full md:w-1/2 px-2 mb-4\">\r\n                    <FormTextInput\r\n                      label=\"Daytime Phone #\"\r\n                      name=\"phone\"\r\n                      type=\"tel\"\r\n                      value={form.phone}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full px-2 mb-4\">\r\n                    <FormTextInput\r\n                      label=\"E-mail\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      value={form.email}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full px-2 mb-4\">\r\n                    {/* no textarea component yet, so use FormLabel + raw textarea */}\r\n                    <FormLabel label=\"Message\" htmlFor=\"message\" />\r\n                    <textarea\r\n                      id=\"message\"\r\n                      name=\"message\"\r\n                      rows={6}\r\n                      value={form.message}\r\n                      onChange={handleChange}\r\n                      required\r\n                      className=\"\r\n                        w-full\r\n                        border\r\n                        border-gray-300\r\n                        rounded\r\n                        p-3\r\n                        focus:outline-none\r\n                        focus:ring-2\r\n                        focus:ring-blue-500\r\n                      \"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"text-center\">\r\n                  <Button type=\"primary\" label=\"Submit Inquiry\" />\r\n                </div>\r\n              </fieldset>\r\n            </form>\r\n          )}\r\n        </BorderedPanel>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","// ContactStyles.ts\r\nimport { CSSProperties } from 'react';\r\n\r\nexport const contactStyles: CSSProperties = {\r\n  backgroundColor: '#ffffff',\r\n  padding: '2rem',\r\n  borderRadius: '0.5rem',\r\n  boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\r\n};\r\n\r\n","import React from 'react'\r\n\r\nexport interface H2Props {\r\n  /** Text to render inside the H2 */\r\n  heading: string\r\n}\r\n\r\nexport const H2: React.FC<H2Props> = ({ heading }) => (\r\n  <h2 className=\"font-size:32px line-height:1.125 margin-bottom:16px @mq-960--margin-bottom:24px\">\r\n    {heading}\r\n  </h2>\r\n)\r\n"],"names":["Button","href","label","target","type","onClick","className","join","rel","undefined","BorderedPanel","as","borderColor","backgroundColor","children","Tag","FormTextInput","id","name","placeholder","value","onChange","required","rest","inputId","htmlFor","displayName","FormLabel","visuallyHidden","FormSuccessMessage","src","alt","width","height","FormTitle","legend","initialForm","firstName","lastName","phone","email","message","hasSubmitted","setHasSubmitted","useState","form","setForm","handleChange","e","f","H2","heading","onSubmit","preventDefault","rows","contactStyles","padding","borderRadius","boxShadow"],"sourceRoot":""}